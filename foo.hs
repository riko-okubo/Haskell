foo :: Int -> Int -> Int
foo n = \x -> n * x ^ n

-- foo :: Int -> Int -> Int
-- foo n x = n * x ^ n
-- これも同じ意味

foo2 :: Int -> Int
foo2 = foo 2         -- nとして2が与えられた関数

-- この関数は{n:2}--Egという環境を内部的に保持している
-- 環境は{n:2}で、大義的にはEg、である
-- {n:2}--Egは、Egの上に{n:2}という環境が重ねられたもの
-- このように環境を伴う関数をクロージャと呼ぶ
-- ここでは、クロージャとしてのfoo2という変数をを定義している

foo3 :: Int -> Int
foo3 = foo 3        -- nとして3が与えられた関数
